#!/bin/python

# (C) Copyright 2015-2017 Altair Engineering, Inc.  All rights reserved.
# This code is provided "as is" without any warranty, express or implied, or
# indemnification of any kind.  All other terms and conditions are as
# specified in the Altair PBS EULA.

import os
import sys
import getopt
import json

path = os.path.join(os.sep, 'usr', 'src', 'dcgm', 'bindings')
if path not in sys.path:
    sys.path.append(path)

imported_dcgm_modules = True


try:
    import pydcgm
    import dcgm_structs
    import dcgm_fields
    import dcgm_agent
    import dcgmvalue
except:
    imported_dcgm_modules = False
        

def show_usage():
    print 'Usage: %s -g <grp_id list>' % os.path.basename(sys.argv[0])


try:
    opts, args = getopt.getopt(sys.argv[1:], 'g:')
except:
    show_usage()
    sys.exit(1)


group_ids = []


for o, a in opts:
    if o == '-g':
        group_ids = json.loads(a)

if not (group_ids):
    show_usage()
    sys.exit(1)


def delete_group(handleObj, groupObj):
    groupObj.Delete()
        
    ## Destroy the group
    del(groupObj)
    groupObj = None


def cleanup(grpIds):
    if imported_dcgm_modules:
        dcgmHandle = pydcgm.DcgmHandle(ipAddress='127.0.0.1', opMode=dcgm_structs.DCGM_OPERATION_MODE_AUTO)
    
        ## Get a handle to the system level object for DCGM
        dcgmSystem = dcgmHandle.GetSystem()
    
        for grpId in grpIds:
            dcgmGroup = pydcgm.DcgmGroup(dcgmHandle, groupId = int(grpId))
            delete_group(dcgmHandle, dcgmGroup)

        ## Shut down the host engine

        del(dcgmHandle)
        dcgmHandle = None

    else:
        print "Module import error"


cleanup(group_ids)

print "Cleaned up group ids:",group_ids
